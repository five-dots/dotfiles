#!/usr/bin/env zsh

# enable color support of ls and also add handy aliases
if (( $+commands[anyenv] )); then
    if [[ -r "${HOME}/.dir_colors" ]]; then
        eval "$(dircolors -b "${HOME}/.dir_colors")"
    else
        eval "$(dircolors -b)"
    fi

    alias ls='ls -F --group-directories-first --color=auto'
    alias dir='dir -F --color=auto'
    alias vdir='vdir -F --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# ls
if (( $+commands[exa] )); then
    alias ls='exa -F --color=auto --group-directories-first --sort=name'
    alias la='ls -a'
    alias ll='la -lgh --git --time-style=long-iso'
else
    alias la='ls -Av'
    alias ll='la -lv'
fi

# utils
alias relogin='exec ${SHELL} -l'

# tree
(( $+commands[tree] )) && alias tree='tree -F'

# bat
(( $+commands[bat] )) && alias cat='bat'

# ripgrep
(( $+commands[rg] )) && alias rg='rg -i'

# R
(( $+commands[R] )) && alias R='R --no-save --no-restore-data'

# radian
(( $+commands[radian] )) && alias r='radian'

# kitty ssh
(( $+commands[kitty] )) && alias ssh='kitty +kitten ssh'

# lazydocker
(( $+commands[lazydocker] )) && alias lzd='lazydocker'

# cd-gitroot (https://github.com/mollifier/cd-gitroot)
(( $+functions[cd-gitroot] )) && alias cdr='cd-gitroot'

# nnn (n = cd on quit for nnn)
(( $+functions[n] )) && alias n='n -acdGH'

# taskwarrior-tui
(( $+commands[taskwarrior-tui] )) && alias tt='taskwarrior-tui'

# zellij
(( $+commands[zellij] )) && alias zlj='zellij'

# nvim
if (( $+commands[nvim] )); then
    alias nvim-clean='NVIM_APPNAME=nvim-clean nvim'
    alias nvim-clean='NVIM_APPNAME=nvim-clean nvim'
    alias nvim-custom='NVIM_APPNAME=nvim-custom nvim'
    alias nvim-nvchad-custom='NVIM_APPNAME=nvim-nvchad-custom nvim'
    alias nvim-nvchad-clean='NVIM_APPNAME=nvim-nvchad-clean nvim'
    alias nvim-kickstart='NVIM_APPNAME=nvim-kickstart nvim'
    alias nvim-kickstart-clean='NVIM_APPNAME=nvim-kickstart-clean nvim'
fi

# nvim switcher
(( $+functions[nvims] )) && alias nvs='nvims'

